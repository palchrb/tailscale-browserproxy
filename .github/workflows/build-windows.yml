name: Build Windows exe

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'              # run also when pushing version tags (for releases)
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Detect if relevant files have changed (for branch pushes)
      - name: Detect relevant changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            build:
              - 'main.go'
              - 'go.mod'
              - 'go.sum'
              - '.github/workflows/build-windows.yml'

      # Skip build on branch push if no relevant files changed.
      # But always build when this is a tag push (release).
      - name: Short-circuit if not needed on branch
        if: ${{ github.ref_type == 'branch' && steps.changes.outputs.build != 'true' }}
        run: |
          echo "No relevant changes (main.go / go.mod / go.sum / workflow). Skipping build."
          exit 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.x'

      - name: Run go mod tidy
        run: go mod tidy

      - name: Build Windows amd64 binary
        run: |
          GOOS=windows GOARCH=amd64 go build -trimpath -ldflags="-s -w" -o tsnet-browser-proxy.exe ./main.go

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: tsnet-browser-proxy-windows-amd64
          path: tsnet-browser-proxy.exe

  release:
    # Only run this job when a version tag is pushed
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write   # required to create a release
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: tsnet-browser-proxy-windows-amd64
          path: .

      - name: Create GitHub Release and upload asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}   # e.g. v1.0.0
          name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            tsnet-browser-proxy.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
